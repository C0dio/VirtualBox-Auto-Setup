#!/bin/bash

#
# ENVIRONMENT SETUP SCRIPT
#
# NB: This script is intended to be used alongside the Automatic VM Setup script which copies
#     and calls this script using vboxmanage's guestcontrol. To guarantee sudo access on login,
#     guestcontrol logs in as ROOT. As such, keep in mind the creation of directories and files
#     will be from the perspective of ROOT and therefore owened by ROOT as default.
#

VM_USER="${VM_USER:-vmuser}" # VM's Username

#
# Create Log File
#
DIR=/home/$VM_USER

LOG_FILE="$DIR/log.txt"
>"$LOG_FILE"
sudo chmod 777 $LOG_FILE

#
# Update Installer
#
sudo apt-get update

#
# Add VMUser User To Sudoers
#
echo -n "Assigning SUDO Access..." >> $LOG_FILE
sudo usermod -aG sudo $VM_USER &&
    echo "Success" >> $LOG_FILE || { echo "Failure" >> $LOG_FILE; exit 1; }

#
# Install OpenSSH Server For SSH
#
export TERM=xterm-256color
export DEBIAN_FRONTEND=noninteractive
sed -i 's/^mesg n$/tty -s \&\& mesg n/g' /root/.profile
echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

echo -n "Installing openssh-server..." >> $LOG_FILE
apt-get -y install openssh-server &&
    echo "Success" >> $LOG_FILE || { echo "Failure" >> $LOG_FILE; exit 1; }

#
# Install Curl
#
command -v curl &> /dev/null || {
    echo -n "Installing cURL..." >> $LOG_FILE
    apt-get -y install curl &&
    echo "Success" >> $LOG_FILE || { echo "Failure" >> $LOG_FILE; exit 1; }
}

#
# Configure Certificate(s)
#
if [ ! -f "/usr/local/share/ca-certificates/Cisco_Umbrella_Root_CA.crt" ]; then
    echo -n "Downloading Cisco Umbrella Certificate..." >> $LOG_FILE
    curl -k --progress-bar 'https://static.caci.co.uk/umbrella/Cisco_Umbrella_Root_CA.cer' > Cisco_Umbrella_Root_CA.crt
    
    if [ ! -f Cisco_Umbrella_Root_CA.crt ]; then
        echo "Failure. Cisco Umbrella Failed To Download..." >> $LOG_FILE
        exit 1
    fi

    echo -n "Moving Certificate..." >> $LOG_FILE
    sudo mv Cisco_Umbrella_Root_CA.crt /usr/local/share/ca-certificates/
    echo "Success" >> $LOG_FILE

    echo -n "Updating wgetrc..." >> $LOG_FILE
    echo "ca_certificate=/usr/local/share/ca-certificates/Cisco_Umbrella_Root_CA.crt" | sudo tee -a /etc/wgetrc
    echo "Success" >> $LOG_FILE
fi

#
# SSH Keys (GitLab)
#
if [ ! -d /home/$VM_USER/.ssh ]; then
    mkdir /home/$VM_USER/.ssh
fi

if [ -z "$(ls -A /home/$VM_USER/.ssh)" ] || [ ! -f /home/$VM_USER/.ssh/id_ed25519 ]; then
    # generate ssh key for git
    echo -n "Creating SSH Key..." >> $LOG_FILE
    ssh-keygen -t ed25519 -C "VMUser-Git-SSH" -f /home/$VM_USER/.ssh/id_ed25519 -N ""
    echo "Success" >> $LOG_FILE
fi

#
# Branch
#
# limitations: the user will have to setup the SSH key autogenerated on their GitLab account,
#              as such we can only prepare their system for them to clone the repository.
#
if [ ! -d /home/$VM_USER/VMUser ]; then
    echo -n "Creating VMUser Directory..." >> $LOG_FILE
    mkdir -m 755 /home/$VM_USER/VMUser
    sudo chown -R $VM_USER: /home/$VM_USER/VMUser
    echo "Success" >> $LOG_FILE
fi

#
# Install unzip, zip and jq
#
command -v unzip &> /dev/null || {
    echo -n "Installing unzip..." >> $LOG_FILE
    sudo apt-get install -y jq unzip zip
    echo "Success" >> $LOG_FILE
}

#
# Install AWS
#
command -v aws &> /dev/null || {
    echo -n "Downloading AWS..." >> $LOG_FILE
    curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    unzip awscliv2.zip
    echo "Success" >> $LOG_FILE

    echo -n "Installing AWS..." >> $LOG_FILE
    sudo ./aws/install
    echo "Success" >> $LOG_FILE
}

#
# Install Terraform
#
command -v aws &> /dev/null || {
    echo -n "Downloading Terraform..." >> $LOG_FILE
    curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
    sudo apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
    echo "Success" >> $LOG_FILE

    echo -n "Installing Terraform..." >> $LOG_FILE
    sudo apt -y install terraform
    echo "Success" >> $LOG_FILE
}

#
# Install Node
#
command -v npm &> /dev/null || {
    echo -n "Downloading Node..." >> $LOG_FILE
    curl -sL https://deb.nodesource.com/setup_14.x | sudo bash -
    echo "Success" >> $LOG_FILE

    echo -n "Installing Nodejs..." >> $LOG_FILE
    sudo apt -y install nodejs
    echo "Success" >> $LOG_FILE
}

#
# Start Up Script for Labs
#


#
# Update Certificate(s)
#
sudo update-ca-certificates
sudo systemctl restart snapd
sudo snap refresh
echo "Environment Completed!" >> $LOG_FILE